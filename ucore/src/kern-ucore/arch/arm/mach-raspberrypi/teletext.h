// Character definitions based on Courier New
// Each character is a 6x10 bit matrix
// 10 rows of 6-bit numbers
#define TELETEXT_W 6
#define TELETEXT_H 10
static unsigned char teletext[][10] = {
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},	// space
	{0, 4, 4, 4, 4, 0, 4, 0, 0, 0},	//!
	{0, 10, 10, 10, 0, 0, 0, 0, 0, 0},	//"
	{10, 20, 62, 20, 20, 62, 20, 40, 0, 0},	//#
	{4, 14, 16, 8, 6, 28, 8, 8, 0, 0},	//$
	{0, 8, 20, 14, 28, 10, 4, 0, 0, 0},	//%
	{0, 0, 14, 8, 8, 22, 30, 0, 0, 0},	//&
	{0, 4, 4, 4, 0, 0, 0, 0, 0, 0},	//'
	{0, 4, 8, 8, 8, 8, 8, 4, 0, 0},	//(
	{0, 8, 4, 4, 4, 4, 4, 8, 0, 0},	//)
	{0, 4, 31, 4, 10, 0, 0, 0, 0, 0},	//*
	{0, 8, 8, 62, 8, 8, 0, 0, 0, 0},	//+
	{0, 0, 0, 0, 0, 4, 8, 8, 0, 0},	//,
	{0, 0, 0, 30, 0, 0, 0, 0, 0, 0},	//-
	{0, 0, 0, 0, 0, 0, 12, 0, 0, 0},	//.
	{4, 4, 8, 8, 16, 16, 32, 32, 0, 0},	///
	{0, 12, 18, 18, 18, 18, 12, 0, 0, 0},	//0
	{0, 12, 4, 4, 4, 4, 31, 0, 0, 0},	//1
	{0, 12, 18, 4, 8, 16, 30, 0, 0, 0},	//2
	{0, 12, 18, 2, 4, 18, 12, 0, 0, 0},	//3
	{0, 6, 10, 18, 31, 2, 7, 0, 0, 0},	//4
	{0, 14, 8, 12, 2, 18, 12, 0, 0, 0},	//5
	{0, 14, 8, 28, 18, 18, 28, 0, 0, 0},	//6
	{0, 30, 18, 2, 4, 4, 4, 0, 0, 0},	//7
	{0, 12, 18, 12, 18, 18, 12, 0, 0, 0},	//8
	{0, 14, 18, 18, 14, 4, 28, 0, 0, 0},	//9
	{0, 0, 0, 8, 0, 0, 8, 0, 0, 0},	//:
	{0, 0, 0, 4, 0, 0, 4, 8, 8, 0},	//;
	{0, 0, 6, 8, 48, 8, 6, 0, 0, 0},	//<
	{0, 0, 31, 0, 31, 0, 0, 0, 0, 0},	//=
	{0, 0, 24, 4, 3, 4, 24, 0, 0, 0},	//>
	{0, 12, 18, 2, 4, 0, 4, 0, 0, 0},	//?
	{0, 14, 17, 19, 21, 19, 16, 15, 0, 0},	//@
	{0, 12, 4, 10, 14, 17, 27, 0, 0, 0},	//A
	{0, 60, 18, 28, 18, 18, 60, 0, 0, 0},	//B
	{0, 14, 18, 16, 16, 16, 14, 0, 0, 0},	//C
	{0, 60, 18, 18, 18, 18, 60, 0, 0, 0},	//D
	{0, 62, 18, 24, 16, 18, 62, 0, 0, 0},	//E
	{0, 31, 9, 12, 8, 8, 28, 0, 0, 0},	//F
	{0, 14, 16, 16, 23, 18, 12, 0, 0, 0},	//G
	{0, 55, 18, 30, 18, 18, 59, 0, 0, 0},	//H
	{0, 14, 4, 4, 4, 4, 14, 0, 0, 0},	//I
	{0, 7, 2, 2, 18, 18, 12, 0, 0, 0},	//J
	{0, 59, 18, 20, 28, 18, 59, 0, 0, 0},	//K
	{0, 56, 16, 16, 16, 18, 62, 0, 0, 0},	//L
	{0, 55, 54, 54, 42, 34, 55, 0, 0, 0},	//M
	{0, 55, 26, 26, 22, 22, 58, 0, 0, 0},	//N
	{0, 12, 18, 18, 18, 18, 12, 0, 0, 0},	//O
	{0, 60, 18, 18, 28, 16, 56, 0, 0, 0},	//P
	{0, 12, 18, 18, 18, 18, 12, 6, 0, 0},	//Q
	{0, 60, 18, 18, 28, 18, 57, 0, 0, 0},	//R
	{0, 30, 18, 12, 2, 18, 28, 0, 0, 0},	//S
	{0, 62, 42, 8, 8, 8, 28, 0, 0, 0},	//T
	{0, 55, 18, 18, 18, 18, 12, 0, 0, 0},	//U
	{0, 51, 33, 18, 18, 18, 12, 0, 0, 0},	//V
	{0, 59, 17, 21, 21, 21, 10, 0, 0, 0},	//W
	{0, 54, 20, 8, 8, 20, 54, 0, 0, 0},	//X
	{0, 59, 17, 10, 4, 4, 14, 0, 0, 0},	//Y
	{0, 30, 18, 4, 8, 18, 30, 0, 0, 0},	//Z
	{0, 12, 8, 8, 8, 8, 8, 12, 0, 0},	//[
	{32, 16, 16, 16, 8, 8, 4, 4, 0, 0},	//\.
	{0, 12, 4, 4, 4, 4, 4, 12, 0, 0},	//]
	{0, 12, 18, 0, 0, 0, 0, 0, 0, 0},	//^
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 63},	//_
	{0, 8, 4, 0, 0, 0, 0, 0, 0, 0},	//`
	{0, 0, 0, 14, 2, 30, 31, 0, 0, 0},	//a
	{0, 48, 16, 28, 18, 18, 60, 0, 0, 0},	//b
	{0, 0, 0, 14, 16, 16, 14, 0, 0, 0},	//c
	{0, 6, 2, 14, 18, 18, 15, 0, 0, 0},	//d
	{0, 0, 0, 12, 30, 16, 14, 0, 0, 0},	//e
	{0, 6, 8, 30, 8, 8, 30, 0, 0, 0},	//f
	{0, 0, 0, 15, 18, 18, 14, 2, 28, 0},	//g
	{0, 48, 16, 28, 18, 18, 59, 0, 0, 0},	//h
	{0, 4, 0, 12, 4, 4, 14, 0, 0, 0},	//i
	{0, 4, 0, 30, 2, 2, 2, 2, 30, 0},	//j
	{0, 48, 16, 22, 28, 20, 54, 0, 0, 0},	//k
	{0, 24, 8, 8, 8, 8, 28, 0, 0, 0},	//l
	{0, 0, 0, 58, 21, 21, 53, 0, 0, 0},	//m
	{0, 0, 0, 60, 18, 18, 51, 0, 0, 0},	//n
	{0, 0, 0, 12, 18, 18, 12, 0, 0, 0},	//o
	{0, 0, 0, 60, 18, 18, 28, 16, 56, 0},	//p
	{0, 0, 0, 15, 18, 18, 14, 2, 7, 0},	//q
	{0, 0, 0, 30, 8, 8, 30, 0, 0, 0},	//r
	{0, 0, 0, 30, 28, 2, 28, 0, 0, 0},	//s
	{0, 0, 16, 62, 16, 18, 12, 0, 0, 0},	//t
	{0, 0, 0, 54, 18, 18, 15, 0, 0, 0},	//u
	{0, 0, 0, 51, 18, 12, 12, 0, 0, 0},	//v
	{0, 0, 0, 59, 21, 21, 10, 0, 0, 0},	//w
	{0, 0, 0, 54, 8, 20, 54, 0, 0, 0},	//x
	{0, 0, 0, 59, 18, 10, 4, 8, 24, 0},	//y
	{0, 0, 0, 30, 20, 10, 30, 0, 0, 0},	//z
	{0, 4, 8, 8, 24, 8, 8, 4, 0, 0},	//{
	{0, 4, 4, 4, 4, 4, 4, 4, 0, 0},	//|
	{0, 8, 4, 4, 6, 4, 4, 8, 0, 0},	//}
	{0, 0, 0, 26, 20, 0, 0, 0, 0, 0},	//~
	{31, 31, 31, 31, 31, 31, 31, 31, 31, 0}	// character-sized block, not in ascii
};
