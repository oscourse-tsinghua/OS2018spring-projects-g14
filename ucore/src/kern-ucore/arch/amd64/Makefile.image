ifneq ($(MAKECMDGOALS),clean)
include $(KCONFIG_AUTOCONFIG)
endif

BLTREE = $(TOPDIR)/src/bootloader

KERNEL_IMG := $(OBJPATH_ROOT)/kernel.img
KERNEL_ELF := $(KTREE_OBJ_ROOT)/kernel-$(ARCH).elf
ENTRY32_OBJ := ${KTREE_OBJ_ROOT}/arch/$(ARCH)/init/entry32.o
ENTRY32_SRC := ${KTREE}/arch/$(ARCH)/init/entry32.S
BOOTOTHERS_SRC := ${KTREE}/arch/$(ARCH)/init/bootother.S
BOOTOTHERS_OBJ := ${KTREE_OBJ_ROOT}/arch/$(ARCH)/init/bootother.o
BOOTOTHERS_OUT := ${KTREE_OBJ_ROOT}/arch/$(ARCH)/init/bootother
PIGGYCODE_SRC_IN := ${KTREE}/arch/${ARCH}/piggycode.S.in
PIGGYCODE_SRC := ${KTREE_OBJ_ROOT}/arch/${ARCH}/piggycode.S
PIGGYCODE_OBJ := ${KTREE_OBJ_ROOT}/arch/${ARCH}/piggycode.o
BOOTSECT   := $(OBJPATH_ROOT)/bootloader/bootsect
LINK_FILE_IN	:= $(KTREE)/arch/${ARCH}/ucore.ld.in
LINK_FILE     := $(KTREE_OBJ_ROOT)/arch/$(ARCH)/ucore.ld
SEDFLAGS	= s/TEXT_START/$(UCONFIG_KERNEL_BASE)/

ifdef UCONFIG_HAVE_LINUX_DDE36_BASE
DDELIB := $(TOPLEVEL_DIR)/build/lib/dde
DRIVERS_O := $(DDELIB)/drivers.o
endif

$(KERNEL_IMG): $(BOOTSECT) $(KERNEL_ELF)
	@echo Making $@
	$(Q)dd if=/dev/zero of=$@ count=10000 >/dev/null 2>&1
	$(Q)dd if=$(BOOTSECT) of=$@ conv=notrunc >/dev/null 2>&1
	$(Q)dd if=$(KERNEL_ELF) of=$@ seek=1 conv=notrunc >/dev/null 2>&1

$(KERNEL_ELF): $(LINK_FILE) $(KERNEL_BUILTIN) $(ENTRY32_OBJ) $(PIGGYCODE_OBJ) $(RAMDISK_OBJ) $(DRIVERS_O)
	@echo Linking uCore
	$(Q)$(TARGET_LD) $(TARGET_LDFLAGS) -z max-page-size=0x1000 -T $(LINK_FILE) $(KERNEL_BUILTIN) $(ENTRY32_OBJ) $(PIGGYCODE_OBJ) $(RAMDISK_OBJ) $(DRIVERS_O) -o $@

$(LINK_FILE): $(LINK_FILE_IN) $(KCONFIG_AUTOCONFIG)
	@echo "creating linker script"
	@sed  "$(SEDFLAGS)" < $< > $@

$(BOOTSECT): $(OBJPATH_ROOT)
	$(Q)$(MAKE) -C $(BLTREE) -f $(BLTREE)/Makefile all

$(ENTRY32_OBJ): $(ENTRY32_SRC)
	$(Q)$(TARGET_CC) -D__ASSEMBLY__ $(TARGET_CFLAGS) -c -o $@ $<

$(BOOTOTHERS_OBJ): $(BOOTOTHERS_SRC)
	$(Q)$(TARGET_CC) -D__ASSEMBLY__ $(TARGET_CFLAGS) -c -o $@ $<

$(BOOTOTHERS_OUT): $(BOOTOTHERS_OBJ)
	$(Q)$(TARGET_LD) -Ttext=0x7000 -o $@.elf $<
	$(Q)$(TARGET_OBJCOPY) -S -O binary $@.elf $@

$(PIGGYCODE_SRC): $(PIGGYCODE_SRC_IN)
	$(Q)sed 's|MAKE_OUT|$(KTREE_OBJ_ROOT)/arch/$(ARCH)|g' $< > $@

$(PIGGYCODE_OBJ): $(BOOTOTHERS_OUT) $(PIGGYCODE_SRC)
	$(Q)$(TARGET_CC) -D__ASSEMBLY__ $(TARGET_CFLAGS) -c -o $@ $(PIGGYCODE_SRC)

.PHONY: all clean FORCE
all: $(KERNEL_IMG)

FORCE:

clean:
	rm -f $(KERNEL_ELF) $(LINK_FILE)
